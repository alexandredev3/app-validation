@import url('https://fonts.googleapis.com/css2?family=Roboto:wght@400;500;700;900&display=swap');

:root {
  --primary-color: #08ca79;
  --bg-color: #F4F4FB;
  --text-color: #353640;
  --input-color: hsla(235, 9%, 23%, 0.25);
  --light-color: rgba(255, 255, 255, 0.04);
}

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

@keyframes moveForward {
  from {
    transform: translateX(-300px);
    opacity: 0;
  }
  to {
    transform: translateX(0px);
    opacity: 1;
  }
}
@keyframes moveBackward {
  from {
    transform: translateX(0px);
    opacity: 1;
  }
  to {
    transform: translateX(-300px);
    opacity: 0;
  }
}

.box-message {
  position: absolute;

  display: flex;
  flex-direction: column;

  margin: 20px 20px;
  padding: 14px;

  border-radius: 5px;

  width: 24%;
  height: 100px;
  background: var(--primary-color);
}

.desability {
  animation-name: moveBackward;
  animation-duration: 200ms;
  animation-fill-mode: forwards;
}

.actived {
  animation-name: moveForward;
  animation-duration: 200ms;
  animation-fill-mode: forwards;
}

html {
  font-family: 'Roboto', sans-serif;
  height: 100%;
}

body {
  height: 100vh;

  display: flex;
  flex-direction: column;

  background-color: var(--bg-color);
  color: #f0f0f5;
}

form {
  width: 100%;
  max-width: 500px;

  margin: 32px auto;
  padding: 32px 64px;

  display: flex;
  flex-direction: column;
}

form h2 {
  font-size: 28px;
  color: var(--text-color);

  margin-bottom: 32px;
}

div.input {
  margin-bottom: 24px;
  position: relative;
}

input,
button {
  /* reset appeareance */
  -moz-appearance: none;
  -webkit-appearance: none;
  appearance: none;

  /* box */
  width: 100%;

  padding: 16px 0;

  border:none;
  border-bottom: 1px solid var(--input-color);

  background-color: transparent;

  outline: none;

  /* text */
  color: var(--text-color);
  font-size: 1em;

}

button {
  margin-top: 16px;

  border-radius: 5px;

  cursor: pointer;

  width: 50%;

  font-size: 18px;
  font-weight: bold;
  color: var(--bg-color);

  background-color: var(--primary-color);

  transition: all 200ms;
}

button:hover {
  opacity: .8;
}

/*O "~" quer dizer que eu estou procurando o irmÃ£o do input no caso label*/
input ~ label {
  position: absolute;
  top: 16px;
  left: 0;

  color: var(--input-color);

  transition: .4s;
}

input:focus ~ label,
input:valid ~ label {
  transform: translateY(-24px);
  font-size: 0.8em;
  letter-spacing: 0.1em;
}
/*
  input:valid ->  Quando o campo for valido, tiver escrito alguma coisa no input ele vai aplicar
  esse estilo.
  * Para aplicar essa estrategia o input precisa ter o atributo required.
*/

.input span.error {
  display: flex;
  
  padding: 0;
}

.input span.error.active {
  color: #ff5858;
  padding: 4px;
}